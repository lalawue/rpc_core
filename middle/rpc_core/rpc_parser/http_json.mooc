--
-- Copyright (c) 2020 lalawue
--
-- This library is free software; you can redistribute it and/or modify it
-- under the terms of the MIT license. See LICENSE for details.
--

import CJson from "cjson"
import HttpParser from "middle.ffi_hyperparser"

struct Parser {
    _hp = false -- hyperparser

    static fn newRequest() {
        parser = Self()
        parser._hp = HttpParser("REQUEST")
        return parser
    }

    static fn newResponse() {
        parser = Self()
        parser._hp = HttpParser("RESPONSE")
        return parser
    }

    -- return ret_value, proto_info, data_table
    -- the proto_info would be http_header_table
    fn process(data) {
        ret_value, state, http_tbl = self._hp:process(data)
        if ret_value < 0 {
            return ret_value
        }
        proto_info = nil
        json_object = nil
        if state == HttpParser.STATE_BODY_FINISH and http_tbl {
            if http_tbl.contents {
                content = table.concat(http_tbl.contents)
                http_tbl.contents = nil
                json_object = CJson.decode(content)
            } else {
                json_object = {}
            }
            proto_info = http_tbl
        }
        return ret_value, proto_info, json_object
    }

    fn destroy() {
        if self._hp {
            self._hp:destroy()
            self._hp = nil
        }
    }
}

return Parser
