--
-- Copyright (c) 2020 lalawue
--
-- This library is free software; you can redistribute it and/or modify it
-- under the terms of the MIT license. See LICENSE for details.
--

import Bit from "bit"
Log = require("middle.logger")("[RAW]", "error")

struct Dial {
    _info = false
    _data = false -- support only one arg

    -- set arg only once
    static fn newRequest(rpc_info, rpc_opt, rpc_args, rpc_body) {
        if rpc_info {
            self = Self()
            self._info = rpc_info
            self._data = rpc_args or rpc_body
            assert(type(self._data) == "string", "Only support string")
            return self
        }
    }

    static fn newResponse(rpc_info, rpc_opt, rpc_body) {
        if rpc_info {
            self = Self()
            self._info = rpc_info
            self._data = rpc_body
            assert(type(self._data) == "string", "Only support string")
            return self
        }
    }

    fn makePackage() {
        if self._data and self._data:len() <= 65536 {
            len = self._data:len()
            -- 2 byte ahead for raw data
            return string.char(Bit.rshift(len, 8)) .. string.char(Bit.band(len, 0xff)) .. self._data
        } else {
            Log:error("Invalid data")
        }
    }
}

return Dial
